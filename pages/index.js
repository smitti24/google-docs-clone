import { useState, useEffect } from "react";
import Head from "next/head";
import CreateNewDocument from "../components/CreateNewDocument";
import Header from "../components/Header";
import MyDocuments from "../components/MyDocuments";
import { getSession, useSession } from "next-auth/react";
import Login from "../components/Login";
import {
  Button,
  Dialog,
  DialogBody,
  DialogFooter,
} from "@material-tailwind/react";
import { database } from "../firebase";
import { collection, doc, serverTimestamp, addDoc } from "firebase/firestore";
import {
  useCollection,
  useCollectionOnce,
} from "react-firebase-hooks/firestore";

export default function Home() {
  const { data: session } = useSession();
  const [showModal, setShowModal] = useState(false);
  const [input, setInput] = useState("");
  const [snapshot, loading, error] = useCollection(
    collection(database, "userDocs", session?.user?.email, "docs")
  );

  if (!session) return <Login />;

  const createDocument = async () => {
    if (!input) return;

    const docRef = doc(database, "userDocs", session.user.email);
    const colRef = collection(docRef, "docs");

    await addDoc(colRef, {
      fileName: input,
      timestamp: serverTimestamp(),
    })
      .then(() => {
        console.log("CREATED");
      })
      .catch((err) => {
        console.error("Error creating document", err);
      });

    setInput();
    setShowModal(false);
  };

  const modal = (
    <Dialog open={showModal} handler={() => setShowModal(false)}>
      <DialogBody divider>
        <input
          value={input}
          onChange={(e) => setInput(e.target.value)}
          type="text"
          className="outline-none w-full"
          placeholder="Enter name of document..."
          onKeyDown={(e) => e.key === "Enter" && createDocument()}
        />
      </DialogBody>
      <DialogFooter>
        <Button
          variant="text"
          color="blue"
          onClick={() => setShowModal(false)}
          className="mr-1"
        >
          <span>Cancel</span>
        </Button>
        <Button
          variant="gradient"
          color="green"
          onClick={() => createDocument()}
        >
          <span>Confirm</span>
        </Button>
      </DialogFooter>
    </Dialog>
  );

  return (
    <div>
      <Head>
        <title>Google Docs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />

      {modal}

      <section className="bg-[#F8F9FA] pb-10 px-10 ">
        <div className="max-w-3xl mx-auto" onClick={() => setShowModal(true)}>
          <CreateNewDocument />
        </div>
      </section>
      <section className="bg-white px-10 md:px-0">
        <div className="max-w-3xl mx-auto text-sm text-grey-700">
          <MyDocuments data={snapshot?.docs} />
        </div>
      </section>
    </div>
  );
}

export async function getServerSideProps(context) {
  const session = await getSession(context);

  return {
    props: {
      session,
    },
  };
}
